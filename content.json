[{"title":"TypeScript","date":"2017-04-06T03:12:20.000Z","path":"2017/04/06/TypeScript/","text":"TypeScript设计原则TypeScript Design GoalsTypeScript 设计numbers, strings, structures, boolean 等数据类型的原因请参考TypeScript Design Goalsinterface的实现1234567891011121314151617====================TypeScript====================interface UserInfo&#123; age : any; userName :string;&#125;====================JavaScript====================function getUserInfo(user : UserInfo):string &#123; return user.userName + \":\" + user.age; &#125;可以看到TypeScript转译为ES5之后interface没有了，为什么？因为javascript没有interface这个概念那么TypeScript的interface有什么用？这就要回归到TypeScript的原则上了：辅助编译器进行静态类型检查enum的实现12345678910111213====================TypeScript====================enum Coler &#123;red, Green, Blue&#125;;console.log(Coler.Blue);====================JavaScript====================var Coler;(function (Coler) &#123; Coler[Coler[\"red\"] = 0] = \"red\"; Coler[Coler[\"Green\"] = 1] = \"Green\"; Coler[Coler[\"Blue\"] = 2] = \"Blue\";&#125;)(Coler || (Coler = &#123;&#125;));;console.log(Coler.Blue);class的实现123456789101112131415161718192021====================TypeScript====================class UserInfo &#123; username: string; constructor(msg: string) &#123; this.username = msg; &#125; getUserInfo() &#123; return \"欢迎您, \" + this.username + \"!\"; &#125;&#125;====================JavaScript====================var UserInfo = (function () &#123; function UserInfo(msg) &#123; this.username = msg; &#125; UserInfo.prototype.getUserInfo = function () &#123; return \"欢迎您, \" + this.username + \"!\"; &#125;; return UserInfo;&#125;());extends的实现123456789101112131415161718192021====================TypeScript====================d extends b====================JavaScript====================var __extends = (this &amp;&amp; this.__extends) || function (d, b) &#123; for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; function __() &#123; this.constructor = d; &#125; d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());&#125;;1、(this &amp;&amp; this.__extends) 判断当前上下文环境中是否存在__extends，如果存在，则使用存在的，没有则创建for 循环遍历被继承对象b的属性，把属性赋予继承者d2、function __() &#123; this.constructor = d; &#125;手动重置constructor,避免constructor属性将被置为泛用对象Object3、b === null ? Object.create(b) : (__.prototype = b.prototype, new __())如果被继承对象为null，则创建被继承对象b并赋予继承者，否则把被继承对象b的prototype赋予继承者123456789101112131415161718====================TypeScript====================class A extends B &#123; logger() &#123; console.log(); &#125;&#125;====================JavaScript====================var A = (function(_super)&#123; __extends(A, _super); function A() &#123; _super.apply(this, arguments); &#125; A.prototype.logger = function () &#123; console.log(); &#125;;&#125;(B))","tags":[{"name":"TypeScript","slug":"TypeScript","permalink":"http://azmake.github.io/tags/TypeScript/"}]},{"title":"让程序员少走弯路的14个忠告","date":"2017-01-20T07:04:06.000Z","path":"2017/01/20/advice/","text":"无论是谁，在刚进入某个领域之时，有再大的雄心壮志也敌不过眼前的迷茫：不知道应该怎么做，不知道应该做什么。下面是一名软件开发人员所学到的经验，希望能对大家有所帮助12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667681.不要害怕在工作中学习。 只要有电脑，就可以通过电子阅读器阅读报纸和大多数书籍。如果你只是做好自己的本职工作以及分配的任务，那是学不到很多东西的。如果你盲目地要求更多的工作，也是不可能提升自己的。放慢脚步，先将一些基础的知识捡起来。 2.在事业上勇往直前，自己为自己负责。 大概只有十分之一的人才能得到导师的特殊照顾，如果你是十分之九中的一员，那就意味着大部分时间里是没有人来关照你的。所以你必须自己关照自己。如果可以的话，尽量避免那些无法提升自己也不能教你任何东西的工作：因为它不会为你的职业增值，其他人也不会关心你所付出的努力（只要你不妨碍他们）。然后三年之后，如果你拿不出什么成绩，那么通常能做的就只能是换工作。 3.过度表现和表现不佳都是病，得治。 很多企业都有不少效率低下的工作人员。这并非是个糟糕的决策，因为你完全可以通过管理等一系列措施提高他们的效率。那些被解雇的通常是那些既表现不佳又搞出了什么大的纰漏的家伙。不过，你也要警惕不可过度表现。因为这会导致上级和同事一些额外的不必要的关注——也许是等着随时抓你的小辫子。 我的意思并不是说你就可以不努力工作了，相反，你应该好好工作，用心学习。但是从我个人的经验看，完全没有必要过分表现——可能比表现不佳更要不得。 4.不要去征求“同意”，除非不这么做会有无法承担的后果。 想用一个星期的时间去钻研自己的调查研究？不要去请示老板，因为他们永远也不可能“同意”。甚至他们会对你表示不喜，因为从他们的角度看，你这是没有责任心不爱岗敬业的表现。当然如果你所要做的对业务确实是有风险的，又或是在大多数情况下，老板都能同意的，那就大胆去请示吧。反之，就不用去了。 5.永远不要为自己的时间说抱歉。 你可以承认一个项目没有成功，当然最好是将它作为一种前进的动力和经验，但是关键是你永远不应该为自己项目的感到抱歉。这只能说明你还需要更多的磨练。也千万不要主动去像老板坦白，“我只在周末我自己的时间搞这些业务项目”。如果你的公司不允许在正常的工作时间干其他事情，那么严格遵守。你不尊重自己的时间，那就没人会尊重它。 6.关注互联网的发展 不能只局限于自己所用的技术上，关注整个计算机行业和互联网的发展，才不会被淘汰。 7.不要不切实际地试图证明你的老板是错误的。 当年轻的工程师们觉得他们的想法比上司的更好，但又缺乏支持的时候，他们往往会在这上面加倍投注时间和精力：“我要证明是老板错了……！” 如果你用的是自己的时间（并且工作上没有紧急事情），那么你的老板，实际上并不会怎么在意。反之，你的老板就会怀疑和不满你的工作状态和工作态度了，并且会潜意识地拒绝给你晋升和加薪的机会。他们会用自己的方法来证实你给他们的负面印象，所以，即使你成功说服了你的老板，其实你已经失败了。不出意外的话，你的老板早就给你打上了“能力不错，但是不能专注于完成分配的工作，而且喜欢和我对着干，真让人不爽。”的标签。 8.不要参合其他人的争斗。 正如你还年轻，经验不足，所以在大多数情况下，你是没有任何实权的。如果你参合到其他人之间的争斗，或者站出来支持他人的不公正遭遇，那么你很可能会被推出来作”杀鸡儆猴“用。我们应该为自己而战斗，这样即使结局并不美好，至少也能赢得一部分人的尊重，并保护了自己。否则，别人只当你是一个愚蠢又傲慢的傻叉。 9.好和坏并不是绝对性的。 换个角度看问题。 不要看到任何事情就给它定性为“好”或者“坏”，换个角度看看。老板爱用咆哮体？那么说明他可能也不被他的上级信任。分配到的项目很无聊？可能你的经理也正郁闷着呢，所以就没时间找你的茬了。而且你还可以将空出时间用于学习新的技能为下一份工作做准备。令人头大的文化？如果你能坚持而其他人做不到的话，那么你就会脱颖而出了亲。所以，不要将一件事情简单地贴上“好”或“坏”的标签。话说，这似乎是一个会随着年龄增长而提高的技能哦。 10.薪资不能走下坡路，除非自己去创业。 如果你转行了（从金融转到生物技术研究），或者去了消费水平比较低的区域，那么10％的降幅是允许的，除此之外，请回答“No”。告诉你一件事，其实大多数人在评估他人工作上面都不擅长。也就是说，你现在的薪资水平完全可以当作以后谈判的起点。如果你决定自降身价，那么最好有一个能说服自己的理由，比如说，地位更高。 11.锻炼。 锻炼能影响你的健康、你的信心、你的性生活以及你的职业生涯。而且锻炼身体也能提高工作效率。如果你发现自己已经很久没有锻炼了，那么马上可以运动起来了，话说，身体才是革命的本钱啊。 12.长时间工作：偶尔还行，总是这样就有害处了。 如果你的周老板（周扒皮）只是为了省钱而让你一个人干了两份工作，还只拿一份薪水，那么立马走人。相信我，你的这个老板比你需要这份工作更加需要你。 13.透过现象发现核心技术的发展趋势。 NoSQL数据库和大数据技术等热词将有一半在15年之后成为明日黄花。相反，线性代数的工作知识则是常青树。你得琢磨清楚什么才是有意义的，值得学习的核心技术原理（如函数式编程），而哪些只是潮流而已。这些”潮流“可能对你当下非常有用（例如，有助于你找到工作），但是你不应该在它们身上花太多的时间。只有扎实的基础才能让挡得住一波又一波的新潮流，而不被前浪拍死在沙滩上。 14.最后，尽可能多地学习。这很难，但是请坚持。 学习才是根本，只有不断地学习不断地吸收营养，我们职业生涯这颗小树苗才有可能成长为参天大树。这很难，因为即使是真正聪明的人也很难读懂那些前沿论文。（在某种程度上，这是因为许多论文写得并不是很好，但这是另一个话题了。）相信我，没有人天生就看得懂复杂的公式。我们其实很幸运，我们是站在一个又一个巨人的肩膀上。所以，如果你想成为一名伟大的程序员，那么就应该比在学校里的时候更加用功地学习和钻研。😄 😄 😄 😄 😄 😄 😄 😄 😄 😄 😄 😄","tags":[{"name":"随笔摘录","slug":"随笔摘录","permalink":"http://azmake.github.io/tags/随笔摘录/"}]},{"title":"idea PlayFramework2","date":"2017-01-20T06:46:22.000Z","path":"2017/01/20/idea-playframework2/","text":"IntelliJ IDEA14 以上版本的 Play Framework 2.x由Scala Plugins创建。所以需要IntelliJ IDEA14 以上的版本先安装Scalahttps://www.jetbrains.com/help/idea/2016.1/getting-started-with-play-2-x.html?origin=old_helpScala安装方法123451、可到官网 [https://confluence.jetbrains.com/display/SCA/Scala+Plugin+for+IntelliJ+IDEA](https://confluence.jetbrains.com/display/SCA/Scala+Plugin+for+IntelliJ+IDEA)下载压缩包（不用解压），IntelliJ IDEA -&gt; Preferences -&gt; Plugins -&gt; install plugins from disk,找到下载的压缩包即可。2、IntelliJ IDEA -&gt; Preferences -&gt; Plugins，在搜索框里输入scala在点击search in repositores 或者其它显示的链接。找到所需要的plugins点击install即可。3、scala安装包包含SBT tool，不需要再另外安装，scala安装完后不需要再idea里面做配置。Enabling and Disabling Plugins123456789101112131、Open the Settings dialog (e.g. ⌘,).2、In the left-hand pane, select Plugins.3、On the Plugins page that opens in the right-hand part of the dialog, do one of the following:* To enable a plugin, select the check box to the right of its name.* To disable a plugin, clear the corresponding check box.4、If the plugin of interest is not present in the list (which may be the case for a repository plugin), download and install the plugin.5、Restart IntelliJ IDEA for the changes to take effect.Creating a project12345671、If no project is currently open in IntelliJ IDEA, click Create New Project on the Welcome screen. Otherwise, select File | New | Project.As a result, the New Project wizard opens.2、In the left-hand pane, select Scala.Note that for creating a Java project with the Play 2.x framework, you need to select Java.3、In the right-hand pane, select Play 2.x.You can also select Scala for creating a project with the Scala module, SBT for creating a project with the SBT module or Activator for creating a project with Typesafe Activator templates.Importing a Play 2.x project1、在导入项目之前需要到项目的project/plugins.sbt里面启用 ebean，addSbtPlugin(&quot;com.typesafe.sbt&quot; % &quot;sbt-play-ebean&quot; % &quot;1.0.0&quot;)。2、修改用户目录下.sbt文件夹里面的repositories文件(需要先备份)，这个是全局修改，不需要再对项目进行单独配置（若不习惯这种方式，可以修改项目的plugins.sbt文件）。123456789101112131415local activator-launcher-local: file://$&#123;activator.local.repository-$&#123;activator.home-$&#123;user.home&#125;/.activator&#125;/repository&#125;, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] activator-local: file://$&#123;activator.local.repository-/Users/azmake/Documents/activator-1.3.10/repository&#125;, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] my-local: file://$&#123;activator.local.repository-$&#123;user.home&#125;/.ivy2/cache&#125;, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] oschina:http://maven.oschina.net/content/groups/public/ oschina-ivy:http://maven.oschina.net/content/groups/public/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] sbt-releases-repo: http://repo.typesafe.com/typesafe/ivy-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] sbt-plugins-repo: http://repo.scala-sbt.org/scalasbt/sbt-plugin-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext] maven-central: http://repo1.maven.org/maven2/第一次创建项目可能需要挂代理过墙，SBT会把jar包下载到用户目录下的.ivy2文件夹里面。项目的依赖会放在2个地方，一是.ivy2文件夹，第二个是activator里面的repository文件夹。IntelliJ IDEA lets you import an existing Play 2.x project.12345671、On the main menu, select File | New | Project from Existing Sources.2、In the window that opens, select a file that you want to import and click OK. The Import project wizard opens.3、On the first page of the wizard, select Import project from external model option and choose SBT project from the list. Click Next.4、On the next page of the wizard, select SBT options and click Finish.IntelliJ IDEA 导入项目后会检查更新，有可能需要下载，也有可能不需要","tags":[{"name":"Java","slug":"Java","permalink":"http://azmake.github.io/tags/Java/"},{"name":"PlayFramework2","slug":"PlayFramework2","permalink":"http://azmake.github.io/tags/PlayFramework2/"}]},{"title":"IntelliJ IDEA 导入现有Play Framework 1.X 项目","date":"2017-01-19T03:34:40.000Z","path":"2017/01/19/idea-import-playframework/","text":"1、项目准备1234567891011121314151617现有项目=============================================cd 项目 play idealize=============================================创建新项目 =============================================play new &lt;项目名&gt;cd 项目 play idealize=============================================现在只是 Prepare your application for opening it in IntelliJ IDEA2、IntelliJ IDEA 配置使用IntelliJ IDEA 打开项目里面的 \\.ipr 文件Specifying Play framework settingsIn IntelliJ IDEA, the Play framework settings are specified in the Settings dialog, on the Play Configuration page.123451、Open the Settings dialog (e.g. ⌘,).2、In the left-hand pane of the dialog, select Play Configuration.3、On the Play Configuration page that opens in the right-hand part of the dialog:In the Home field, specify the Play framework installation directory.Home：这里选择Play的安装目录In the Working directory field, specify the Play framework working directory. This is the directory from which the commands of the play command-line utility are run.Working directory：这里一般选择你的工程的目录Depending on your preferences, turn the Show on console run option on or off.4、Click OK in the Settings dialog.Running a Play applicationTo run your play application, you can use the play run command:123456Start the play command-line utility (Tools | Play with Playframework).In the Run tool window, after play, type run and press ⏎.Open a Web browser and go to http://localhost:9000 to see the application home page.As an alternative, you can create an IntelliJ IDEA run/debug configuration, and use that configuration for running your application.To create a run configuration for running your Play application:Open the Run/Debug Configurations dialog (e.g. Run | Edit Configurations).Click add (⌘N) and select Application.In the following fields, specify:Main class ：输入 play.server.ServerVM options：输入 -Dapplication.path=&quot;.&quot;Program arguments: 不用写Working directory：选择项目所在目录If necessary, change the run configuration name and click OK.Now, to execute this run configuration, you can, for example, use Run | Run. (For more information, see Running Applications.)⚠️ 注意如果是新建的项目，还没有写任何的代码，会报1Error:(8, 1) java: 程序包models不存在的错误，注释完所有的 import model.* 就可以正常运行。https://www.jetbrains.com/help/idea/2016.1/play-framework-1-x.html","tags":[{"name":"idea","slug":"idea","permalink":"http://azmake.github.io/tags/idea/"},{"name":"PlayFramework","slug":"PlayFramework","permalink":"http://azmake.github.io/tags/PlayFramework/"},{"name":"Java","slug":"Java","permalink":"http://azmake.github.io/tags/Java/"}]},{"title":"terminal终端首页图案","date":"2017-01-18T09:24:30.000Z","path":"2017/01/18/terminal-welcome-logo/","text":"打开终端（可以command+空格键，然后输入ter自动打开终端）输入 cd /etc输入 sudo pico motd然后将想要输入的图案或文字在终端中粘贴最后，按键：control+x ,再按y回车保存。1234567891011121314151617181920 _ooOoo_ o8888888o 88&quot; . &quot;88 (| -_- |) O\\ = /O ____/`---&apos;\\____ .&apos; \\\\| |// `. / \\\\||| : |||// \\ / _||||| -:- |||||- \\ | | \\\\\\ - /// | | | \\_| &apos;&apos;\\---/&apos;&apos; | | \\ .-\\__ `-` ___/-. / ___`. .&apos; /--.--\\ `. . __ .&quot;&quot; &apos;&lt; `.___\\_&lt;|&gt;_/___.&apos; &gt;&apos;&quot;&quot;. | | : `- \\`.;`\\ _ /`;.`/ - ` : | | \\ \\ `-. \\_ __\\ /__ _/ .-` / /======`-.____`-.___\\_____/___.-`____.-&apos;====== `=---=&apos;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 与世界交手那么多年，你是否风采依旧？","tags":[{"name":"Mac","slug":"Mac","permalink":"http://azmake.github.io/tags/Mac/"},{"name":"Linux、Unix","slug":"Linux、Unix","permalink":"http://azmake.github.io/tags/Linux、Unix/"},{"name":"Terminal","slug":"Terminal","permalink":"http://azmake.github.io/tags/Terminal/"}]},{"title":"U盘刻录成系统盘后如何格式化回来","date":"2017-01-18T08:58:16.000Z","path":"2017/01/18/windows-u/","text":"1234567891011121314151617使用快捷键 win＋R ,输入cmd，按enter键进入命令行输入命令：diskpart列出所有磁盘:list disk 输入命令：select disk (盘号 0或者1等数字)选择需要格式化的磁盘 注意：一定要看准磁盘号，没有后悔药输入命令：clean退出终端：exit桌面－我的电脑－右键－管理－管理工具－创建并格式化硬盘分区重新对此盘进行分区就可以了。","tags":[{"name":"Windows","slug":"Windows","permalink":"http://azmake.github.io/tags/Windows/"},{"name":"分区/格式化","slug":"分区-格式化","permalink":"http://azmake.github.io/tags/分区-格式化/"}]},{"title":"Mac csv 文件乱码解决方案","date":"2017-01-18T08:45:51.000Z","path":"2017/01/18/mac-csv/","text":"1234567891、在 Mac 上启动 Excel，新建一个空文件 2、File =&gt; import 3、选择要打开的CSV文件4、调整 File origin 选项里的文字编码，一般是 UTF8 或者GBK2312，可以预览是否是正确的编码，这里可以看到分隔符是&apos;，&apos;还是&apos;；&apos;或者其它5、选择步骤4中预览看到的分隔符分隔符,确定","tags":[{"name":"Mac","slug":"Mac","permalink":"http://azmake.github.io/tags/Mac/"},{"name":"Excel","slug":"Excel","permalink":"http://azmake.github.io/tags/Excel/"}]},{"title":"Hello World","date":"2017-01-18T08:32:59.000Z","path":"2017/01/18/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","tags":[]}]